version: '3'

services:
  db:
    # The postgres container is just upstream postgres with an initdb script.
    build: ./database
    container_name: polls_db
    # Here the variables to define the DB name user and password.
    env_file:
      - secrets-db.env
    # Save the data
    volumes:
      - polls_db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  web:
    build: .
    container_name: polls_django
    # This environment comes up with a PID 1 sleep loop, this makes it so
    # Development can be done by running the runserver command from `make shell`
    # In a production environment we would want the PID 1 to be gunicorn or
    # something like that. Similarly if you don't like this, remove the manage.py
    # comment below:
    #
    # entrypoint: python
    # command: manage.py runserver 0.0.0.0:8000
    entrypoint: /bin/bash
    command: -c "while true; do sleep 10; date; done"
    # Stick our source code into the docker container at runtime. This is used
    # to modify the environment while developing.
    volumes:
      - ./django:/src
    env_file:
      # Important bits like the SECRET_KEY
      - secrets.env
      # We pull in the DB secret to build the postgresql connection string.
      - secrets-db.env
    environment:
      - DEBUG=True
      - ENVIRON=dev
      # This is normally a dangerous variable use with caution. Don't '*' in prod.
      - ALLOWED_HOSTS=*
      - DOMAIN=localhost
    ports:
      - "8000:8000"

volumes:
  polls_db:
